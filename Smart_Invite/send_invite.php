<?php
// Enable error reporting for debugging
error_reporting(E_ALL);
ini_set('display_errors', 1);

// Set content type
header('Content-Type: application/json');

// Check if request is POST
if ($_SERVER['REQUEST_METHOD'] !== 'POST') {
    http_response_code(405);
    echo json_encode(['success' => false, 'message' => 'Method not allowed']);
    exit;
}

// Get JSON input
$input = file_get_contents('php://input');
$data = json_decode($input, true);

// Validate input
if (!$data) {
    http_response_code(400);
    echo json_encode(['success' => false, 'message' => 'Invalid JSON data']);
    exit;
}

// Extract email and invitation data
$recipientEmail = isset($data['email']) ? trim($data['email']) : '';
$eventTitle = isset($data['eventTitle']) ? trim($data['eventTitle']) : 'Event Invitation';
$eventDate = isset($data['eventDate']) ? trim($data['eventDate']) : '';
$eventTime = isset($data['eventTime']) ? trim($data['eventTime']) : '';
$eventLocation = isset($data['eventLocation']) ? trim($data['eventLocation']) : '';
$hostName = isset($data['hostName']) ? trim($data['hostName']) : '';
$eventMessage = isset($data['eventMessage']) ? trim($data['eventMessage']) : '';
$htmlContent = isset($data['htmlContent']) ? $data['htmlContent'] : '';

// Validate email
if (empty($recipientEmail) || !filter_var($recipientEmail, FILTER_VALIDATE_EMAIL)) {
    http_response_code(400);
    echo json_encode(['success' => false, 'message' => 'Invalid email address']);
    exit;
}

// Email configuration (you'll need to update these with your SMTP details)
$senderEmail = "your-email@domain.com"; // Change this to your email
$senderName = "SmartInvite.AI";

// Create email subject
$subject = "Invitation: " . $eventTitle;

// Create email headers
$headers = [];
$headers[] = "MIME-Version: 1.0";
$headers[] = "Content-type: text/html; charset=UTF-8";
$headers[] = "From: " . $senderName . " <" . $senderEmail . ">";
$headers[] = "Reply-To: " . $senderEmail;
$headers[] = "X-Mailer: PHP/" . phpversion();

// Create email body
if (!empty($htmlContent)) {
    $emailBody = $htmlContent;
} else {
    // Fallback HTML template if htmlContent is not provided
    $emailBody = "
    <!DOCTYPE html>
    <html>
    <head>
        <title>$eventTitle</title>
        <style>
            body { font-family: Arial, sans-serif; margin: 20px; }
            .invitation { max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #ddd; border-radius: 10px; }
            .title { font-size: 24px; color: #333; text-align: center; margin-bottom: 20px; }
            .details { font-size: 16px; line-height: 1.6; }
            .message { font-style: italic; margin: 20px 0; padding: 15px; background: #f5f5f5; border-radius: 5px; }
        </style>
    </head>
    <body>
        <div class='invitation'>
            <div class='title'>$eventTitle</div>
            <div class='details'>
                <p><strong>üìÖ Date:</strong> $eventDate</p>
                <p><strong>‚è∞ Time:</strong> $eventTime</p>
                <p><strong>üìç Location:</strong> $eventLocation</p>
                <p><strong>üë• Host:</strong> $hostName</p>
            </div>
            <div class='message'>$eventMessage</div>
            <p style='text-align: center; color: #666; font-size: 12px;'>Generated by SmartInvite.AI</p>
        </div>
    </body>
    </html>
    ";
}

// Attempt to send email
try {
    // For development/testing - just simulate sending
    // In production, you would use PHPMailer or your SMTP service
    
    // Simulate email sending delay
    usleep(500000); // 0.5 second delay
    
    // Log email attempt (for debugging)
    $logEntry = date('Y-m-d H:i:s') . " - Email sent to: $recipientEmail, Subject: $subject\n";
    file_put_contents('email_log.txt', $logEntry, FILE_APPEND | LOCK_EX);
    
    // For now, we'll simulate success
    // To actually send emails, uncomment and configure the mail() function below:
    
    /*
    $mailSent = mail(
        $recipientEmail,
        $subject,
        $emailBody,
        implode("\r\n", $headers)
    );
    
    if (!$mailSent) {
        throw new Exception('Failed to send email');
    }
    */
    
    // Return success response
    echo json_encode([
        'success' => true,
        'message' => 'Invitation email sent successfully!',
        'recipient' => $recipientEmail,
        'subject' => $subject
    ]);

} catch (Exception $e) {
    // Return error response
    http_response_code(500);
    echo json_encode([
        'success' => false,
        'message' => 'Failed to send email: ' . $e->getMessage()
    ]);
}

// Optional: Save email to database for tracking
// You could add database logging here if needed

?>

<?php
/*
=== EMAIL SETUP INSTRUCTIONS ===

To actually send emails in production, you have several options:

1. BASIC PHP MAIL (not recommended for production):
   - Uncomment the mail() function above
   - Configure your server's sendmail/postfix

2. PHPMAILER (recommended):
   - Install PHPMailer: composer require phpmailer/phpmailer
   - Replace the mail() function with PHPMailer SMTP configuration

3. EMAIL SERVICE (best for production):
   - Use services like SendGrid, Mailgun, or AWS SES
   - They provide APIs and better deliverability

For development/testing:
- Current code simulates email sending
- Check email_log.txt for sent email logs
- Emails won't actually be delivered

To enable real email sending:
1. Uncomment the mail() function
2. Update $senderEmail with your real email
3. Configure your server's mail settings
*/
?>